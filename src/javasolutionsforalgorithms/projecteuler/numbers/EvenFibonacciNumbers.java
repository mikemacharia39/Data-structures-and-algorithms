package javasolutionsforalgorithms.projecteuler.numbers;

import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */
public class EvenFibonacciNumbers {

    public double sumOfEvenFibonacciNums(double max){

        double num1 = 1;
        double num2 = 2;
        double sum = 0;
        double evenSum = 0;

        double i = 0;
        while (i < max) {
            sum = num1 + num2;

            if (num1%2 == 0) {
                evenSum += num1;
            }

            if (num1 > 4000000) {
                break;
            }

            num1 = num2;
            num2 = sum;

            i++;
        }

        return evenSum;
    }

    public static void main(String[] args) {
        EvenFibonacciNumbers fibonacciNumbers = new EvenFibonacciNumbers();

        double max = 4000000;
        Logger.getLogger(EvenFibonacciNumbers.class.getName())
                .log(Level.INFO, "Even num sum: {0}", fibonacciNumbers.sumOfEvenFibonacciNums(max));
    }
}
